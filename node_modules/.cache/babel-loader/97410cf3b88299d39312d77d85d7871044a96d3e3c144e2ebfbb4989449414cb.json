{"ast":null,"code":"var _jsxFileName = \"/home/tansen/my documents/practice/bingo test/src/Components/Pages/Home.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport EndGame from \"./EndGame\";\nimport Square from \"./Square\";\n\n// const INITIAL = \"\";\n// //let X_PLAYER='X';\n// const winCombination = [\n\n//   [0,1,2,3,4],\n//   [5,6,7,8,9],\n//   [10,11,12,13,14],\n//   [15,16,17,18,19],\n//   [20,21,22,23,24],\n//   [0,5,10,15,20],\n//   [1,6,11,16,21],\n//   [2,7,12,17,22],\n//   [3,8,13,18,23],\n//   [4,9,14,19,24],\n//   [4,8,12,16,20],\n//   [0,6,12,18,24],\n\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Bingo() {\n  _s();\n  const INITIAL = \"\";\n  //let X_PLAYER='X';\n  const winCombination = [[0, 1, 2, 3, 4], [5, 6, 7, 8, 9], [10, 11, 12, 13, 14], [15, 16, 17, 18, 19], [20, 21, 22, 23, 24], [0, 5, 10, 15, 20], [1, 6, 11, 16, 21], [2, 7, 12, 17, 22], [3, 8, 13, 18, 23], [4, 9, 14, 19, 24], [4, 8, 12, 16, 20], [0, 6, 12, 18, 24]];\n  const [X_PLAYER, setX_PLAYER] = useState('');\n  const [grid, setGrid] = useState(Array(25).fill(INITIAL));\n  const [player, setPlayer] = useState(false);\n  const [gameFinished, setGameFinished] = useState(false);\n  const [winCount, setwinCount] = useState({\n    X: 0\n  });\n  function isGameOver() {\n    if (!gameFinished) {\n      grid[winCombination[2][2]] = X_PLAYER;\n      for (let i = 0; i < 12; i++) {\n        if (grid[winCombination[i][0]] === X_PLAYER && grid[winCombination[i][1]] === X_PLAYER && grid[winCombination[i][2]] === X_PLAYER && grid[winCombination[i][3]] === X_PLAYER && grid[winCombination[i][4]] === X_PLAYER) {\n          setGameFinished(true);\n          setwinCount({\n            ...winCount,\n            X: winCount.X + 1\n          });\n          console.log(\"X WON\");\n          return;\n        }\n      }\n    }\n  }\n  function restartGame() {\n    setGrid(Array(25).fill(INITIAL));\n    setGameFinished(false);\n  }\n  function clearHistory() {\n    setwinCount({\n      X: 0\n    });\n    restartGame();\n  }\n  isGameOver();\n  function handleClick(id) {\n    const rand = (0 + Math.random() * 75 .toFixed(2)).toString;\n    setX_PLAYER(rand);\n    setGrid(grid.map((item, index) => {\n      if (index === id) {\n        return X_PLAYER;\n      } else {\n        return item;\n      }\n    }));\n    setPlayer(player);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"win-history\",\n      children: [\"X's WINS: \", winCount.X]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), gameFinished && /*#__PURE__*/_jsxDEV(EndGame, {\n      winCount: winCount,\n      restartGame: restartGame,\n      player: player,\n      clearHistory: clearHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Square, {\n      clickedArray: grid,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(Bingo, \"rWl9dmFE1jiBT7e6lUdT4cP3bng=\");\n_c = Bingo;\nexport default Bingo;\nvar _c;\n$RefreshReg$(_c, \"Bingo\");","map":{"version":3,"names":["useState","EndGame","Square","Bingo","INITIAL","winCombination","X_PLAYER","setX_PLAYER","grid","setGrid","Array","fill","player","setPlayer","gameFinished","setGameFinished","winCount","setwinCount","X","isGameOver","i","console","log","restartGame","clearHistory","handleClick","id","rand","Math","random","toFixed","toString","map","item","index"],"sources":["/home/tansen/my documents/practice/bingo test/src/Components/Pages/Home.js"],"sourcesContent":["import { useState } from \"react\";\nimport EndGame from \"./EndGame\";\nimport Square from \"./Square\";\n\n// const INITIAL = \"\";\n// //let X_PLAYER='X';\n// const winCombination = [\n\n//   [0,1,2,3,4],\n//   [5,6,7,8,9],\n//   [10,11,12,13,14],\n//   [15,16,17,18,19],\n//   [20,21,22,23,24],\n//   [0,5,10,15,20],\n//   [1,6,11,16,21],\n//   [2,7,12,17,22],\n//   [3,8,13,18,23],\n//   [4,9,14,19,24],\n//   [4,8,12,16,20],\n//   [0,6,12,18,24],\n  \n// ];\n\nfunction Bingo() {\n  const INITIAL = \"\";\n//let X_PLAYER='X';\nconst winCombination = [\n\n  [0,1,2,3,4],\n  [5,6,7,8,9],\n  [10,11,12,13,14],\n  [15,16,17,18,19],\n  [20,21,22,23,24],\n  [0,5,10,15,20],\n  [1,6,11,16,21],\n  [2,7,12,17,22],\n  [3,8,13,18,23],\n  [4,9,14,19,24],\n  [4,8,12,16,20],\n  [0,6,12,18,24],\n  \n];\n\n  const[X_PLAYER,setX_PLAYER]=useState('');\n  const [grid, setGrid] = useState(Array(25).fill(INITIAL));\n  const [player, setPlayer] = useState(false);\n  const [gameFinished, setGameFinished] = useState(false);\n  const [winCount, setwinCount] = useState({ X: 0 });\n\n  function isGameOver() {\n    if (!gameFinished) {\n      grid[winCombination[2][2]] = X_PLAYER\n      for (let i = 0; i < 12; i++) {        \n        if (\n          grid[winCombination[i][0]] === X_PLAYER &&\n          grid[winCombination[i][1]] === X_PLAYER &&\n          grid[winCombination[i][2]] === X_PLAYER &&\n          grid[winCombination[i][3]] === X_PLAYER &&\n          grid[winCombination[i][4]] === X_PLAYER \n        ) {\n          setGameFinished(true);\n          setwinCount({ ...winCount, X: winCount.X + 1 });\n          console.log(\"X WON\");\n          return;\n        }\n      }\n     }\n  }\n\n  function restartGame() {\n    setGrid(Array(25).fill(INITIAL));\n    setGameFinished(false);\n  }\n\n  function clearHistory() {\n    setwinCount({ X: 0 });\n    restartGame();\n  }\n\n  isGameOver();\n\n  function handleClick(id) {\n    const rand = (0 + Math.random() * (75).toFixed(2)).toString;\n    setX_PLAYER(rand);\n    setGrid(\n      grid.map((item, index) => {\n        if (index === id) {\n            return X_PLAYER;\n        } \n        else {\n          return item;\n        }\n      })\n    );\n    setPlayer(player);\n  }\n\n  return (\n    <div>\n      <span className=\"win-history\">\n        X's WINS: {winCount.X}\n      </span>\n      {gameFinished && (\n        <EndGame\n          winCount={winCount}\n          restartGame={restartGame}\n          player={player}\n          clearHistory={clearHistory}\n        />\n      )}\n      <Square clickedArray={grid} handleClick={handleClick} />\n    </div>\n  );\n}\n\nexport default Bingo;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAEA,SAASC,KAAK,GAAG;EAAA;EACf,MAAMC,OAAO,GAAG,EAAE;EACpB;EACA,MAAMC,cAAc,GAAG,CAErB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACX,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACX,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAChB,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAChB,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAChB,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EACd,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EACd,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EACd,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EACd,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EACd,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EACd,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAEf;EAEC,MAAK,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACU,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAACP,OAAO,CAAC,CAAC;EACzD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC;IAAEkB,CAAC,EAAE;EAAE,CAAC,CAAC;EAElD,SAASC,UAAU,GAAG;IACpB,IAAI,CAACL,YAAY,EAAE;MACjBN,IAAI,CAACH,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGC,QAAQ;MACrC,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC3B,IACEZ,IAAI,CAACH,cAAc,CAACe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKd,QAAQ,IACvCE,IAAI,CAACH,cAAc,CAACe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKd,QAAQ,IACvCE,IAAI,CAACH,cAAc,CAACe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKd,QAAQ,IACvCE,IAAI,CAACH,cAAc,CAACe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKd,QAAQ,IACvCE,IAAI,CAACH,cAAc,CAACe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKd,QAAQ,EACvC;UACAS,eAAe,CAAC,IAAI,CAAC;UACrBE,WAAW,CAAC;YAAE,GAAGD,QAAQ;YAAEE,CAAC,EAAEF,QAAQ,CAACE,CAAC,GAAG;UAAE,CAAC,CAAC;UAC/CG,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;UACpB;QACF;MACF;IACD;EACH;EAEA,SAASC,WAAW,GAAG;IACrBd,OAAO,CAACC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAACP,OAAO,CAAC,CAAC;IAChCW,eAAe,CAAC,KAAK,CAAC;EACxB;EAEA,SAASS,YAAY,GAAG;IACtBP,WAAW,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,CAAC;IACrBK,WAAW,EAAE;EACf;EAEAJ,UAAU,EAAE;EAEZ,SAASM,WAAW,CAACC,EAAE,EAAE;IACvB,MAAMC,IAAI,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACC,MAAM,EAAE,GAAI,EAAE,EAAEC,OAAO,CAAC,CAAC,CAAC,EAAEC,QAAQ;IAC3DxB,WAAW,CAACoB,IAAI,CAAC;IACjBlB,OAAO,CACLD,IAAI,CAACwB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACxB,IAAIA,KAAK,KAAKR,EAAE,EAAE;QACd,OAAOpB,QAAQ;MACnB,CAAC,MACI;QACH,OAAO2B,IAAI;MACb;IACF,CAAC,CAAC,CACH;IACDpB,SAAS,CAACD,MAAM,CAAC;EACnB;EAEA,oBACE;IAAA,wBACE;MAAM,SAAS,EAAC,aAAa;MAAA,WAAC,YAClB,EAACI,QAAQ,CAACE,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAChB,EACNJ,YAAY,iBACX,QAAC,OAAO;MACN,QAAQ,EAAEE,QAAS;MACnB,WAAW,EAAEO,WAAY;MACzB,MAAM,EAAEX,MAAO;MACf,YAAY,EAAEY;IAAa;MAAA;MAAA;MAAA;IAAA,QAE9B,eACD,QAAC,MAAM;MAAC,YAAY,EAAEhB,IAAK;MAAC,WAAW,EAAEiB;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACpD;AAEV;AAAC,GA1FQtB,KAAK;AAAA,KAALA,KAAK;AA4Fd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}