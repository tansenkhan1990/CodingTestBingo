{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport uncontrollable from 'uncontrollable';\nimport warning from 'warning';\nimport { bsStyles, bsClass, getClassSet, splitBsPropsAndOmit } from './utils/bootstrapUtils';\nimport { State, Style } from './utils/StyleConfig';\nimport Body from './PanelBody';\nimport Heading from './PanelHeading';\nimport Title from './PanelTitle';\nimport Footer from './PanelFooter';\nimport Toggle from './PanelToggle';\nimport Collapse from './PanelCollapse';\nvar has = Object.prototype.hasOwnProperty;\nvar defaultGetId = function defaultGetId(id, type) {\n  return id ? id + \"--\" + type : null;\n};\nvar propTypes = {\n  /**\n   * Controls the collapsed/expanded state ofthe Panel. Requires\n   * a `Panel.Collapse` or `<Panel.Body collapsible>` child component\n   * in order to actually animate out or in.\n   *\n   * @controllable onToggle\n   */\n  expanded: PropTypes.bool,\n  /**\n   * A callback fired when the collapse state changes.\n   *\n   * @controllable expanded\n   */\n  onToggle: PropTypes.func,\n  eventKey: PropTypes.any,\n  /**\n   * An HTML `id` attribute uniquely identifying the Panel component.\n   */\n  id: PropTypes.string\n};\nvar contextTypes = {\n  $bs_panelGroup: PropTypes.shape({\n    getId: PropTypes.func,\n    activeKey: PropTypes.any,\n    onToggle: PropTypes.func\n  })\n};\nvar childContextTypes = {\n  $bs_panel: PropTypes.shape({\n    headingId: PropTypes.string,\n    bodyId: PropTypes.string,\n    bsClass: PropTypes.string,\n    onToggle: PropTypes.func,\n    expanded: PropTypes.bool\n  })\n};\nvar Panel = /*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Panel, _React$Component);\n  function Panel() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.handleToggle = function (e) {\n      var panelGroup = _this.context.$bs_panelGroup;\n      var expanded = !_this.getExpanded();\n      if (panelGroup && panelGroup.onToggle) {\n        panelGroup.onToggle(_this.props.eventKey, expanded, e);\n      } else {\n        _this.props.onToggle(expanded, e);\n      }\n    };\n    return _this;\n  }\n  var _proto = Panel.prototype;\n  _proto.getChildContext = function getChildContext() {\n    var _this$props = this.props,\n      eventKey = _this$props.eventKey,\n      id = _this$props.id;\n    var idKey = eventKey == null ? id : eventKey;\n    var ids;\n    if (idKey !== null) {\n      var panelGroup = this.context.$bs_panelGroup;\n      var getId = panelGroup && panelGroup.getId || defaultGetId;\n      ids = {\n        headingId: getId(idKey, 'heading'),\n        bodyId: getId(idKey, 'body')\n      };\n    }\n    return {\n      $bs_panel: _extends({}, ids, {\n        bsClass: this.props.bsClass,\n        expanded: this.getExpanded(),\n        onToggle: this.handleToggle\n      })\n    };\n  };\n  _proto.getExpanded = function getExpanded() {\n    var panelGroup = this.context.$bs_panelGroup;\n    if (panelGroup && has.call(panelGroup, 'activeKey')) {\n      process.env.NODE_ENV !== \"production\" ? warning(this.props.expanded == null, 'Specifying `<Panel>` `expanded` in the context of an accordion ' + '`<PanelGroup>` is not supported. Set `activeKey` on the ' + '`<PanelGroup>` instead.') : void 0;\n      return panelGroup.activeKey === this.props.eventKey;\n    }\n    return !!this.props.expanded;\n  };\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n      className = _this$props2.className,\n      children = _this$props2.children;\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(this.props, ['onToggle', 'eventKey', 'expanded']),\n      bsProps = _splitBsPropsAndOmit[0],\n      props = _splitBsPropsAndOmit[1];\n    return React.createElement(\"div\", _extends({}, props, {\n      className: classNames(className, getClassSet(bsProps))\n    }), children);\n  };\n  return Panel;\n}(React.Component);\nPanel.propTypes = propTypes;\nPanel.contextTypes = contextTypes;\nPanel.childContextTypes = childContextTypes;\nvar UncontrolledPanel = uncontrollable(bsClass('panel', bsStyles(_Object$values(State).concat([Style.DEFAULT, Style.PRIMARY]), Style.DEFAULT, Panel)), {\n  expanded: 'onToggle'\n});\n_Object$assign(UncontrolledPanel, {\n  Heading: Heading,\n  Title: Title,\n  Body: Body,\n  Footer: Footer,\n  Toggle: Toggle,\n  Collapse: Collapse\n});\nexport default UncontrolledPanel;","map":{"version":3,"names":["_Object$assign","_Object$values","_extends","_inheritsLoose","classNames","PropTypes","React","uncontrollable","warning","bsStyles","bsClass","getClassSet","splitBsPropsAndOmit","State","Style","Body","Heading","Title","Footer","Toggle","Collapse","has","Object","prototype","hasOwnProperty","defaultGetId","id","type","propTypes","expanded","bool","onToggle","func","eventKey","any","string","contextTypes","$bs_panelGroup","shape","getId","activeKey","childContextTypes","$bs_panel","headingId","bodyId","Panel","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","handleToggle","e","panelGroup","context","getExpanded","props","_proto","getChildContext","_this$props","idKey","ids","process","env","NODE_ENV","render","_this$props2","className","children","_splitBsPropsAndOmit","bsProps","createElement","Component","UncontrolledPanel","DEFAULT","PRIMARY"],"sources":["/home/tansen/my documents/practice/code-challenge-app/node_modules/react-bootstrap/es/Panel.js"],"sourcesContent":["import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport uncontrollable from 'uncontrollable';\nimport warning from 'warning';\nimport { bsStyles, bsClass, getClassSet, splitBsPropsAndOmit } from './utils/bootstrapUtils';\nimport { State, Style } from './utils/StyleConfig';\nimport Body from './PanelBody';\nimport Heading from './PanelHeading';\nimport Title from './PanelTitle';\nimport Footer from './PanelFooter';\nimport Toggle from './PanelToggle';\nimport Collapse from './PanelCollapse';\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaultGetId = function defaultGetId(id, type) {\n  return id ? id + \"--\" + type : null;\n};\n\nvar propTypes = {\n  /**\n   * Controls the collapsed/expanded state ofthe Panel. Requires\n   * a `Panel.Collapse` or `<Panel.Body collapsible>` child component\n   * in order to actually animate out or in.\n   *\n   * @controllable onToggle\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * A callback fired when the collapse state changes.\n   *\n   * @controllable expanded\n   */\n  onToggle: PropTypes.func,\n  eventKey: PropTypes.any,\n\n  /**\n   * An HTML `id` attribute uniquely identifying the Panel component.\n   */\n  id: PropTypes.string\n};\nvar contextTypes = {\n  $bs_panelGroup: PropTypes.shape({\n    getId: PropTypes.func,\n    activeKey: PropTypes.any,\n    onToggle: PropTypes.func\n  })\n};\nvar childContextTypes = {\n  $bs_panel: PropTypes.shape({\n    headingId: PropTypes.string,\n    bodyId: PropTypes.string,\n    bsClass: PropTypes.string,\n    onToggle: PropTypes.func,\n    expanded: PropTypes.bool\n  })\n};\n\nvar Panel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Panel, _React$Component);\n\n  function Panel() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleToggle = function (e) {\n      var panelGroup = _this.context.$bs_panelGroup;\n      var expanded = !_this.getExpanded();\n\n      if (panelGroup && panelGroup.onToggle) {\n        panelGroup.onToggle(_this.props.eventKey, expanded, e);\n      } else {\n        _this.props.onToggle(expanded, e);\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = Panel.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    var _this$props = this.props,\n        eventKey = _this$props.eventKey,\n        id = _this$props.id;\n    var idKey = eventKey == null ? id : eventKey;\n    var ids;\n\n    if (idKey !== null) {\n      var panelGroup = this.context.$bs_panelGroup;\n      var getId = panelGroup && panelGroup.getId || defaultGetId;\n      ids = {\n        headingId: getId(idKey, 'heading'),\n        bodyId: getId(idKey, 'body')\n      };\n    }\n\n    return {\n      $bs_panel: _extends({}, ids, {\n        bsClass: this.props.bsClass,\n        expanded: this.getExpanded(),\n        onToggle: this.handleToggle\n      })\n    };\n  };\n\n  _proto.getExpanded = function getExpanded() {\n    var panelGroup = this.context.$bs_panelGroup;\n\n    if (panelGroup && has.call(panelGroup, 'activeKey')) {\n      process.env.NODE_ENV !== \"production\" ? warning(this.props.expanded == null, 'Specifying `<Panel>` `expanded` in the context of an accordion ' + '`<PanelGroup>` is not supported. Set `activeKey` on the ' + '`<PanelGroup>` instead.') : void 0;\n      return panelGroup.activeKey === this.props.eventKey;\n    }\n\n    return !!this.props.expanded;\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        className = _this$props2.className,\n        children = _this$props2.children;\n\n    var _splitBsPropsAndOmit = splitBsPropsAndOmit(this.props, ['onToggle', 'eventKey', 'expanded']),\n        bsProps = _splitBsPropsAndOmit[0],\n        props = _splitBsPropsAndOmit[1];\n\n    return React.createElement(\"div\", _extends({}, props, {\n      className: classNames(className, getClassSet(bsProps))\n    }), children);\n  };\n\n  return Panel;\n}(React.Component);\n\nPanel.propTypes = propTypes;\nPanel.contextTypes = contextTypes;\nPanel.childContextTypes = childContextTypes;\nvar UncontrolledPanel = uncontrollable(bsClass('panel', bsStyles(_Object$values(State).concat([Style.DEFAULT, Style.PRIMARY]), Style.DEFAULT, Panel)), {\n  expanded: 'onToggle'\n});\n\n_Object$assign(UncontrolledPanel, {\n  Heading: Heading,\n  Title: Title,\n  Body: Body,\n  Footer: Footer,\n  Toggle: Toggle,\n  Collapse: Collapse\n});\n\nexport default UncontrolledPanel;"],"mappings":"AAAA,OAAOA,cAAc,MAAM,8CAA8C;AACzE,OAAOC,cAAc,MAAM,8CAA8C;AACzE,OAAOC,QAAQ,MAAM,4CAA4C;AACjE,OAAOC,cAAc,MAAM,kDAAkD;AAC7E,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,gBAAgB;AAC3C,OAAOC,OAAO,MAAM,SAAS;AAC7B,SAASC,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAEC,mBAAmB,QAAQ,wBAAwB;AAC5F,SAASC,KAAK,EAAEC,KAAK,QAAQ,qBAAqB;AAClD,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,OAAO,MAAM,gBAAgB;AACpC,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,IAAIC,GAAG,GAAGC,MAAM,CAACC,SAAS,CAACC,cAAc;AAEzC,IAAIC,YAAY,GAAG,SAASA,YAAY,CAACC,EAAE,EAAEC,IAAI,EAAE;EACjD,OAAOD,EAAE,GAAGA,EAAE,GAAG,IAAI,GAAGC,IAAI,GAAG,IAAI;AACrC,CAAC;AAED,IAAIC,SAAS,GAAG;EACd;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAExB,SAAS,CAACyB,IAAI;EAExB;AACF;AACA;AACA;AACA;EACEC,QAAQ,EAAE1B,SAAS,CAAC2B,IAAI;EACxBC,QAAQ,EAAE5B,SAAS,CAAC6B,GAAG;EAEvB;AACF;AACA;EACER,EAAE,EAAErB,SAAS,CAAC8B;AAChB,CAAC;AACD,IAAIC,YAAY,GAAG;EACjBC,cAAc,EAAEhC,SAAS,CAACiC,KAAK,CAAC;IAC9BC,KAAK,EAAElC,SAAS,CAAC2B,IAAI;IACrBQ,SAAS,EAAEnC,SAAS,CAAC6B,GAAG;IACxBH,QAAQ,EAAE1B,SAAS,CAAC2B;EACtB,CAAC;AACH,CAAC;AACD,IAAIS,iBAAiB,GAAG;EACtBC,SAAS,EAAErC,SAAS,CAACiC,KAAK,CAAC;IACzBK,SAAS,EAAEtC,SAAS,CAAC8B,MAAM;IAC3BS,MAAM,EAAEvC,SAAS,CAAC8B,MAAM;IACxBzB,OAAO,EAAEL,SAAS,CAAC8B,MAAM;IACzBJ,QAAQ,EAAE1B,SAAS,CAAC2B,IAAI;IACxBH,QAAQ,EAAExB,SAAS,CAACyB;EACtB,CAAC;AACH,CAAC;AAED,IAAIe,KAAK,GACT;AACA,UAAUC,gBAAgB,EAAE;EAC1B3C,cAAc,CAAC0C,KAAK,EAAEC,gBAAgB,CAAC;EAEvC,SAASD,KAAK,GAAG;IACf,IAAIE,KAAK;IAET,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;MACvFF,IAAI,CAACE,IAAI,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;IAC9B;IAEAN,KAAK,GAAGD,gBAAgB,CAACQ,IAAI,CAACC,KAAK,CAACT,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAACU,MAAM,CAACL,IAAI,CAAC,CAAC,IAAI,IAAI;IAElFJ,KAAK,CAACU,YAAY,GAAG,UAAUC,CAAC,EAAE;MAChC,IAAIC,UAAU,GAAGZ,KAAK,CAACa,OAAO,CAACvB,cAAc;MAC7C,IAAIR,QAAQ,GAAG,CAACkB,KAAK,CAACc,WAAW,EAAE;MAEnC,IAAIF,UAAU,IAAIA,UAAU,CAAC5B,QAAQ,EAAE;QACrC4B,UAAU,CAAC5B,QAAQ,CAACgB,KAAK,CAACe,KAAK,CAAC7B,QAAQ,EAAEJ,QAAQ,EAAE6B,CAAC,CAAC;MACxD,CAAC,MAAM;QACLX,KAAK,CAACe,KAAK,CAAC/B,QAAQ,CAACF,QAAQ,EAAE6B,CAAC,CAAC;MACnC;IACF,CAAC;IAED,OAAOX,KAAK;EACd;EAEA,IAAIgB,MAAM,GAAGlB,KAAK,CAACtB,SAAS;EAE5BwC,MAAM,CAACC,eAAe,GAAG,SAASA,eAAe,GAAG;IAClD,IAAIC,WAAW,GAAG,IAAI,CAACH,KAAK;MACxB7B,QAAQ,GAAGgC,WAAW,CAAChC,QAAQ;MAC/BP,EAAE,GAAGuC,WAAW,CAACvC,EAAE;IACvB,IAAIwC,KAAK,GAAGjC,QAAQ,IAAI,IAAI,GAAGP,EAAE,GAAGO,QAAQ;IAC5C,IAAIkC,GAAG;IAEP,IAAID,KAAK,KAAK,IAAI,EAAE;MAClB,IAAIP,UAAU,GAAG,IAAI,CAACC,OAAO,CAACvB,cAAc;MAC5C,IAAIE,KAAK,GAAGoB,UAAU,IAAIA,UAAU,CAACpB,KAAK,IAAId,YAAY;MAC1D0C,GAAG,GAAG;QACJxB,SAAS,EAAEJ,KAAK,CAAC2B,KAAK,EAAE,SAAS,CAAC;QAClCtB,MAAM,EAAEL,KAAK,CAAC2B,KAAK,EAAE,MAAM;MAC7B,CAAC;IACH;IAEA,OAAO;MACLxB,SAAS,EAAExC,QAAQ,CAAC,CAAC,CAAC,EAAEiE,GAAG,EAAE;QAC3BzD,OAAO,EAAE,IAAI,CAACoD,KAAK,CAACpD,OAAO;QAC3BmB,QAAQ,EAAE,IAAI,CAACgC,WAAW,EAAE;QAC5B9B,QAAQ,EAAE,IAAI,CAAC0B;MACjB,CAAC;IACH,CAAC;EACH,CAAC;EAEDM,MAAM,CAACF,WAAW,GAAG,SAASA,WAAW,GAAG;IAC1C,IAAIF,UAAU,GAAG,IAAI,CAACC,OAAO,CAACvB,cAAc;IAE5C,IAAIsB,UAAU,IAAItC,GAAG,CAACiC,IAAI,CAACK,UAAU,EAAE,WAAW,CAAC,EAAE;MACnDS,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG9D,OAAO,CAAC,IAAI,CAACsD,KAAK,CAACjC,QAAQ,IAAI,IAAI,EAAE,iEAAiE,GAAG,0DAA0D,GAAG,yBAAyB,CAAC,GAAG,KAAK,CAAC;MACjP,OAAO8B,UAAU,CAACnB,SAAS,KAAK,IAAI,CAACsB,KAAK,CAAC7B,QAAQ;IACrD;IAEA,OAAO,CAAC,CAAC,IAAI,CAAC6B,KAAK,CAACjC,QAAQ;EAC9B,CAAC;EAEDkC,MAAM,CAACQ,MAAM,GAAG,SAASA,MAAM,GAAG;IAChC,IAAIC,YAAY,GAAG,IAAI,CAACV,KAAK;MACzBW,SAAS,GAAGD,YAAY,CAACC,SAAS;MAClCC,QAAQ,GAAGF,YAAY,CAACE,QAAQ;IAEpC,IAAIC,oBAAoB,GAAG/D,mBAAmB,CAAC,IAAI,CAACkD,KAAK,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;MAC5Fc,OAAO,GAAGD,oBAAoB,CAAC,CAAC,CAAC;MACjCb,KAAK,GAAGa,oBAAoB,CAAC,CAAC,CAAC;IAEnC,OAAOrE,KAAK,CAACuE,aAAa,CAAC,KAAK,EAAE3E,QAAQ,CAAC,CAAC,CAAC,EAAE4D,KAAK,EAAE;MACpDW,SAAS,EAAErE,UAAU,CAACqE,SAAS,EAAE9D,WAAW,CAACiE,OAAO,CAAC;IACvD,CAAC,CAAC,EAAEF,QAAQ,CAAC;EACf,CAAC;EAED,OAAO7B,KAAK;AACd,CAAC,CAACvC,KAAK,CAACwE,SAAS,CAAC;AAElBjC,KAAK,CAACjB,SAAS,GAAGA,SAAS;AAC3BiB,KAAK,CAACT,YAAY,GAAGA,YAAY;AACjCS,KAAK,CAACJ,iBAAiB,GAAGA,iBAAiB;AAC3C,IAAIsC,iBAAiB,GAAGxE,cAAc,CAACG,OAAO,CAAC,OAAO,EAAED,QAAQ,CAACR,cAAc,CAACY,KAAK,CAAC,CAAC2C,MAAM,CAAC,CAAC1C,KAAK,CAACkE,OAAO,EAAElE,KAAK,CAACmE,OAAO,CAAC,CAAC,EAAEnE,KAAK,CAACkE,OAAO,EAAEnC,KAAK,CAAC,CAAC,EAAE;EACrJhB,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF7B,cAAc,CAAC+E,iBAAiB,EAAE;EAChC/D,OAAO,EAAEA,OAAO;EAChBC,KAAK,EAAEA,KAAK;EACZF,IAAI,EAAEA,IAAI;EACVG,MAAM,EAAEA,MAAM;EACdC,MAAM,EAAEA,MAAM;EACdC,QAAQ,EAAEA;AACZ,CAAC,CAAC;AAEF,eAAe2D,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}