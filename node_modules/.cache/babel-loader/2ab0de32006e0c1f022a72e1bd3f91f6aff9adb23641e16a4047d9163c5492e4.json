{"ast":null,"code":"var _jsxFileName = \"/home/tansen/Desktop/bingo_app_coding_test/src/Components/Pages/Home.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport EndGame from \"./EndGame\";\nimport Square from \"./Square\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bingo = () => {\n  _s();\n  const INITIAL = \"\";\n  const [grid, setGrid] = useState(Array(25).fill(INITIAL));\n  const [player, setPlayer] = useState(false);\n  const [gameFinished, setGameFinished] = useState(false);\n  const [winCount, setwinCount] = useState({\n    X: 0\n  });\n  const winCombination = [[0, 1, 2, 3, 4], [5, 6, 7, 8, 9], [10, 11, 12, 13, 14], [15, 16, 17, 18, 19], [20, 21, 22, 23, 24], [0, 5, 10, 15, 20], [1, 6, 11, 16, 21], [2, 7, 12, 17, 22], [3, 8, 13, 18, 23], [4, 9, 14, 19, 24], [4, 8, 12, 16, 20], [0, 6, 12, 18, 24]];\n  const randomArray = [];\n  for (let i = 1; i < 75; i++) {\n    randomArray[i] = i;\n  }\n  const shuffledArray = randomArray.sort((a, b) => 0.5 - Math.random());\n  const isGameOver = () => {\n    if (!gameFinished) {\n      grid[winCombination[2][2]] = \"Center\";\n      for (let i = 0; i < 12; i++) {\n        if (grid[winCombination[i][0]] !== INITIAL && grid[winCombination[i][1]] !== INITIAL && grid[winCombination[i][2]] !== INITIAL && grid[winCombination[i][3]] !== INITIAL && grid[winCombination[i][4]] !== INITIAL) {\n          setGameFinished(true);\n          setwinCount({\n            ...winCount,\n            X: winCount.X + 1\n          });\n          console.log(\"X WON\");\n          return;\n        }\n      }\n    }\n  };\n  const restartGame = () => {\n    setGrid(Array(25).fill(INITIAL));\n    setGameFinished(false);\n  };\n  const clearHistory = () => {\n    setwinCount({\n      X: 0\n    });\n    restartGame();\n  };\n  isGameOver();\n  const handleClick = id => {\n    setGrid(grid.map((item, index) => {\n      if (index === id) {\n        return \"\" + shuffledArray[id];\n      } else {\n        return item;\n      }\n    }));\n    setPlayer(player);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"win-history\",\n      children: winCount.X\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), gameFinished && /*#__PURE__*/_jsxDEV(EndGame, {\n      winCount: winCount,\n      restartGame: restartGame,\n      player: player,\n      clearHistory: clearHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Square, {\n      clickedArray: grid,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Bingo, \"bpceh90AQku9v4buz9dtIPrDoRg=\");\n_c = Bingo;\nexport default Bingo;\nvar _c;\n$RefreshReg$(_c, \"Bingo\");","map":{"version":3,"names":["useState","EndGame","Square","Bingo","INITIAL","grid","setGrid","Array","fill","player","setPlayer","gameFinished","setGameFinished","winCount","setwinCount","X","winCombination","randomArray","i","shuffledArray","sort","a","b","Math","random","isGameOver","console","log","restartGame","clearHistory","handleClick","id","map","item","index"],"sources":["/home/tansen/Desktop/bingo_app_coding_test/src/Components/Pages/Home.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport EndGame from \"./EndGame\";\nimport Square from \"./Square\";\n\nconst Bingo: React.FC = () => {\n  const INITIAL: string = \"\";\n  const [grid, setGrid] = useState<[]>(Array(25).fill(INITIAL));\n  const [player, setPlayer] = useState<Boolean>(false);\n  const [gameFinished, setGameFinished] = useState<Boolean>(false);\n  const [winCount, setwinCount] = useState({ X: 0 });\n  const winCombination: number[][] = [\n    [0, 1, 2, 3, 4],\n    [5, 6, 7, 8, 9],\n    [10, 11, 12, 13, 14],\n    [15, 16, 17, 18, 19],\n    [20, 21, 22, 23, 24],\n    [0, 5, 10, 15, 20],\n    [1, 6, 11, 16, 21],\n    [2, 7, 12, 17, 22],\n    [3, 8, 13, 18, 23],\n    [4, 9, 14, 19, 24],\n    [4, 8, 12, 16, 20],\n    [0, 6, 12, 18, 24],\n  ];\n\n  const randomArray: number[] = [];\n  for (let i = 1; i < 75; i++) {\n    randomArray[i] = i;\n  }\n\n  const shuffledArray: number[] = randomArray.sort(\n    (a, b) => 0.5 - Math.random()\n  );\n\n  const isGameOver = () => {\n    if (!gameFinished) {\n      grid[winCombination[2][2]] = \"Center\";\n      for (let i = 0; i < 12; i++) {\n        if (\n          grid[winCombination[i][0]] !== INITIAL &&\n          grid[winCombination[i][1]] !== INITIAL &&\n          grid[winCombination[i][2]] !== INITIAL &&\n          grid[winCombination[i][3]] !== INITIAL &&\n          grid[winCombination[i][4]] !== INITIAL\n        ) {\n          setGameFinished(true);\n          setwinCount({ ...winCount, X: winCount.X + 1 });\n          console.log(\"X WON\");\n          return;\n        }\n      }\n    }\n  };\n\n  const restartGame = () => {\n    setGrid(Array(25).fill(INITIAL));\n    setGameFinished(false);\n  };\n\n  const clearHistory = () => {\n    setwinCount({ X: 0 });\n    restartGame();\n  };\n\n  isGameOver();\n\n  const handleClick = (id: number) => {\n    setGrid(\n      grid.map((item, index) => {\n        if (index === id) {\n          return \"\" + shuffledArray[id];\n        } else {\n          return item;\n        }\n      })\n    );\n    setPlayer(player);\n  };\n\n  return (\n    <div>\n      <span className=\"win-history\">{winCount.X}</span>\n      {gameFinished && (\n        <EndGame\n          winCount={winCount}\n          restartGame={restartGame}\n          player={player}\n          clearHistory={clearHistory}\n        />\n      )}\n      <Square clickedArray={grid} handleClick={handleClick} />\n    </div>\n  );\n};\n\nexport default Bingo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}